<?php

namespace {{namespace}}\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use {{namespace}}\TestCase;
use {{modelNamespace}}\{{modelName}};

class {{modelName}}Test extends TestCase
{
    use RefreshDatabase, WithFaker;

    const BASE_URI = '{{packageRouteName}}/{{routeName}}';

    /**
     * @test
     */
    public function checkRequiredFields()
    {
        $response = $this->post(self::BASE_URI, []);

        {{required}}
    }

    /**
     * @test
     */
    public function {{objectName}}CanBeCreated()
    {
        ${{objectName}}Fake = {{modelName}}::factory()->make();

        $response = $this->post(self::BASE_URI, ${{objectName}}Fake->toArray());

        $response->assertSessionHas('type', 'success');

        $this->assertCount(1, {{modelName}}::all());

        $this->assertDatabaseHas('{{tableName}}', ${{objectName}}Fake->getAttributes());
    }

    /**
     * @test
     */
    public function {{objectName}}CanBeUpdated()
    {
        ${{objectName}} = {{modelName}}::factory()->make();
        ${{objectName}}Fake = {{modelName}}::factory()->make();

        $response = $this->put(self::BASE_URI . '/' . ${{objectName}}->id, ${{objectName}}Fake->toArray());

        $response->assertSessionHas('type', 'success');

        $this->assertDatabaseHas('{{tableName}}', ${{objectName}}Fake->getAttributes());
    }

    /**
     * @test
     */
    public function {{objectName}}CanBeDeleted()
    {
        ${{objectName}} = {{modelName}}::factory()->make();

        $response = $this->delete(self::BASE_URI . '/' . ${{objectName}}->id);

        $response->assertSessionHas('type', 'success');

        $this->assertDatabaseMissing('{{tableName}}', ${{objectName}}->getAttributes());
    }
}
