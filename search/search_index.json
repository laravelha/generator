{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Introduction Laravelha generator is an open source code generation tool (MIT) made to speed up your development and make your life easier. Stop writing boilerplate code, with a unique command you can build a whole CRUD (views included), using Bootstrap and soon Tailwindcss. Installation After a fresh laravel application install, run the following command: composer require laravelha/preset-api --dev Or if you're building an api run: composer require laravelha/preset-web --dev and finally: composer require laravelha/generator --dev Congratulations! Laravelha is installed. Running commands ha-generator:migration \"Create a new migration class and apply schema at the same time\" ha-generator:model \"Create a new model class and apply schema at the same time\" ha-generator:factory \"Create a new factory class and apply schema at the same time\" ha-generator:requests \"Create a new requests class and apply schema at the same time\" ha-generator:controller \"Create a new controller and resources for api\" ha-generator:resources \"Create a new resources class and apply schema at the same time\" ha-generator:route \"Insert new resources routes\" ha-generator:test \"Create a new feature test and apply schema at the same time\" ha-generator:lang \"Create a new lang resource and apply schema at the same time\" ha-generator:view \"Create a new views resource and apply schema at the same time\" ha-generator:breadcrumb \"Insert new resources breadcrumb\" ha-generator:nav \"Insert new nav item\" ha-generator:crud \"Run all commands\" ha-generator:existing:crud \"Run all commands from a existing database\" ha-generator:package \"Create scaffolding structure to packages\" For more information, use: php artisan help ha-generator:<COMMAND>","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#introduction","text":"Laravelha generator is an open source code generation tool (MIT) made to speed up your development and make your life easier. Stop writing boilerplate code, with a unique command you can build a whole CRUD (views included), using Bootstrap and soon Tailwindcss.","title":"Introduction"},{"location":"#installation","text":"After a fresh laravel application install, run the following command: composer require laravelha/preset-api --dev Or if you're building an api run: composer require laravelha/preset-web --dev and finally: composer require laravelha/generator --dev Congratulations! Laravelha is installed.","title":"Installation"},{"location":"#running-commands","text":"ha-generator:migration \"Create a new migration class and apply schema at the same time\" ha-generator:model \"Create a new model class and apply schema at the same time\" ha-generator:factory \"Create a new factory class and apply schema at the same time\" ha-generator:requests \"Create a new requests class and apply schema at the same time\" ha-generator:controller \"Create a new controller and resources for api\" ha-generator:resources \"Create a new resources class and apply schema at the same time\" ha-generator:route \"Insert new resources routes\" ha-generator:test \"Create a new feature test and apply schema at the same time\" ha-generator:lang \"Create a new lang resource and apply schema at the same time\" ha-generator:view \"Create a new views resource and apply schema at the same time\" ha-generator:breadcrumb \"Insert new resources breadcrumb\" ha-generator:nav \"Insert new nav item\" ha-generator:crud \"Run all commands\" ha-generator:existing:crud \"Run all commands from a existing database\" ha-generator:package \"Create scaffolding structure to packages\" For more information, use: php artisan help ha-generator:<COMMAND>","title":"Running commands"},{"location":"CRUD/","text":"Basic Crud Generating a basic Category CRUD To generate a basic CRUD run: php artisan ha-generator:crud Category -s 'title:string(150), description:text:nullable, published_at:timestamp:nullable' Then you will be prompted to generate a Migration, Model, Controller, Tests, Factory, Routes and Requests. Do you wish to create the migration? [Y/n] Accept all and your files will be created. If you do not wish to be prompted , you can run the past command with the -y flag: php artisan ha-generator:crud Category -s 'title:string(150), description:text:nullable, published_at:timestamp:nullable -y' And that's it!","title":"CRUD"},{"location":"CRUD/#basic-crud","text":"","title":"Basic Crud"},{"location":"CRUD/#generating-a-basic-category-crud","text":"To generate a basic CRUD run: php artisan ha-generator:crud Category -s 'title:string(150), description:text:nullable, published_at:timestamp:nullable' Then you will be prompted to generate a Migration, Model, Controller, Tests, Factory, Routes and Requests. Do you wish to create the migration? [Y/n] Accept all and your files will be created. If you do not wish to be prompted , you can run the past command with the -y flag: php artisan ha-generator:crud Category -s 'title:string(150), description:text:nullable, published_at:timestamp:nullable -y' And that's it!","title":"Generating a basic Category CRUD"},{"location":"configuration/","text":"Publish configuration files To modify the generator configuration, first you must publish the file. Run: php artisan vendor:publish --tag=ha-generator","title":"Configuration"},{"location":"configuration/#publish-configuration-files","text":"To modify the generator configuration, first you must publish the file. Run: php artisan vendor:publish --tag=ha-generator","title":"Publish configuration files"}]}